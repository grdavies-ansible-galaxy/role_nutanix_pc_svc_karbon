---
# enable_karbon.yml tasks file for nutanix_prism_role_karbon_enable
- name: Enable Karbon
  ansible.builtin.uri:
    url: "https://{{ role_nutanix_prism_api_url_base }}/PrismGateway/services/rest/v1/genesis"
    body:
      value: "{\".oid\":\"ClusterManager\",\".method\":\"enable_service_with_prechecks\",\".kwargs\":{\"service_list_json\":\"{\\\"service_list\\\":[\\\"KarbonUIService\\\",\\\"KarbonCoreService\\\"]}\"}}"
    method: POST
    validate_certs: "{{ role_nutanix_pc_svc_karbon_host_validate_certs }}"
    body_format: json
    status_code: 200
    headers:
      Authorization: "{{ role_nutanix_prism_api_auth_string_b64 }}"
  register: role_nutanix_pc_svc_karbon_enable_task
  ignore_errors: false

- name: Debug role_nutanix_pc_svc_karbon_enable_task.json
  ansible.builtin.debug:
    var: role_nutanix_pc_svc_karbon_enable_task.json
  when:
    - role_nutanix_pc_svc_karbon_debug

- name: Wait for Karbon to start
  ansible.builtin.uri:
    url: "https://{{ role_nutanix_prism_api_url_base }}/PrismGateway/services/rest/v1/genesis"
    body:
      value: '{".oid":"ClusterManager",".method":"is_service_enabled",".kwargs":{"service_name":"KarbonUIService"}}'
    method: POST
    validate_certs: "{{ role_nutanix_pc_svc_karbon_host_validate_certs }}"
    body_format: json
    status_code: 200
    headers:
      Authorization: "{{ role_nutanix_prism_api_auth_string_b64 }}"
  register: role_nutanix_pc_svc_karbon_service_result
  until:
    - role_nutanix_pc_svc_karbon_service_result.json | regex_search('true')
  retries: 30
  delay: 10

- name: Update fact karbon_enabled if successful
  ansible.builtin.set_fact:
    role_nutanix_pc_svc_karbon_enabled: true
  when:
    - role_nutanix_pc_svc_karbon_service_result.json | search("true")

- name: Debug role_nutanix_pc_svc_karbon_enabled
  ansible.builtin.debug:
    var: role_nutanix_pc_svc_karbon_enabled
  when:
    - role_nutanix_pc_svc_karbon_debug
